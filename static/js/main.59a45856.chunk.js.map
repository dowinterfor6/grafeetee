{"version":3,"sources":["components/Canvas.jsx","components/Options.jsx","components/Sidebar.jsx","components/App.jsx","index.js"],"names":["Canvas","state","SPRAY_PAINT","canvasRef","useRef","useState","mouseX","setMouseX","mouseY","setMouseY","context","setContext","useEffect","adjustCanvasWidth","window","addEventListener","current","getContext","width","offsetWidth","height","offsetHeight","className","id","ref","onMouseMove","e","clientX","clientY","buttons","activeTool","strokeStyle","color","lineCap","lineJoin","globalAlpha","lineWidth","thickness","lineTo","stroke","onMouseDown","beginPath","moveTo","onMouseUp","closePath","Options","open","dispatch","SET_THICKNESS","handleThicknessChange","SET_HARDNESS","currentTarget","value","type","payload","parseInt","onChange","min","max","Sidebar","SET_COLOR","SET_TOOL","minimized","setMinimized","openColorPicker","setOpenColorPicker","openOptions","setOpenOptions","setColor","screenPosX","setScreenPosX","screenPosY","setScreenPosY","sprayPaintRef","colorPaletteRef","moreOptionsRef","sidebarRef","componentRefs","canvas","document","getElementById","handleClickSelection","classList","dataset","tool","forEach","remove","add","handleNonColorPickerSelection","handleMouseDown","screenX","screenY","getBoundingClientRect","top","left","style","transform","console","log","icon","faArrowsAlt","size","onClick","faMinus","data-tool","faSprayCan","faBrush","faPalette","hex","download","href","toDataURL","faSave","clearRect","faTrash","App","initialState","hardness","useReducer","action","Object","freeze","nextState","assign","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.59a45856.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst Canvas = ({ state, SPRAY_PAINT }) => {\n  const canvasRef = useRef();\n  const [mouseX, setMouseX] = useState(0);\n  const [mouseY, setMouseY] = useState(0);\n  const [context, setContext] = useState();\n\n  useEffect(() => {\n    adjustCanvasWidth();\n    // canvasRef.current.width = canvasRef.current.offsetWidth;\n    // canvasRef.current.height = canvasRef.current.offsetHeight;\n    window.addEventListener('resize', adjustCanvasWidth);\n\n    setContext(canvasRef.current.getContext(\"2d\"));\n  }, []);\n\n  const adjustCanvasWidth = () => {\n    canvasRef.current.width = canvasRef.current.offsetWidth;\n    canvasRef.current.height = canvasRef.current.offsetHeight;\n  }\n\n  const handleSprayPaint = (e) => {\n    // TODO: for non 100% hardness, allow on same spot\n    setMouseX(e.clientX);\n    setMouseY(e.clientY);\n    if (e.buttons !== 1 || state.activeTool !== SPRAY_PAINT) return;\n\n    if (context) {\n      context.strokeStyle = state.color;\n      context.lineCap = \"round\";\n      context.lineJoin = \"round\";\n\n      context.globalAlpha = 1;\n      context.lineWidth = state.thickness;\n      context.lineTo(mouseX, mouseY);\n      context.stroke();\n    }\n  };\n\n  const handleMouseDown = () => {\n    context.beginPath();\n    context.moveTo(mouseX, mouseY);\n  }\n\n  const handleMouseUp = () => {\n    context.closePath();\n  }\n\n  return (\n    <section className=\"canvas-container\">\n      <canvas\n        id=\"canvas\"\n        ref={canvasRef}\n        onMouseMove={handleSprayPaint}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      />\n    </section>\n  )\n}\n\nexport default Canvas;\n","import React from 'react';\n\nconst Options = ({\n  open,\n  dispatch,\n  state,\n  SET_THICKNESS,\n  SET_HARDNESS\n}) => {\n  const [minThickness, maxThickness] = [1, 500];\n  const [minHardness, maxHardness] = [1, 100];\n\n  const handleThicknessChange = ({ currentTarget }) => {\n    if (currentTarget.value < minThickness || currentTarget.value > maxThickness) {\n      return;\n    }\n    dispatch({ type: SET_THICKNESS, payload: parseInt(currentTarget.value)});\n  }\n\n  const handleHardnessChange = ({ currentTarget }) => {\n    if (currentTarget.value < minHardness || currentTarget.value > maxHardness) {\n      return;\n    }\n    dispatch({ type: SET_HARDNESS, payload: parseInt(currentTarget.value)});\n  }\n\n  return (\n    <div className={`options-container ${open ? 'open' : ''}`}>\n      <label>\n        <div className=\"label-title\">\n          Thickness:\n          <input type=\"number\" value={state.thickness} onChange={handleThicknessChange}/>\n        </div>\n        <input\n          className=\"slider-input\"\n          type=\"range\"\n          min={minThickness}\n          max={maxThickness}\n          value={state.thickness}\n          onChange={handleThicknessChange}\n        />\n      </label>\n      {/* <label>\n        <div className=\"label-title\">\n          Hardness:\n          <input type=\"number\" value={state.hardness} onChange={handleHardnessChange}/>\n        </div>\n        <input\n          className=\"slider-input\"\n          type=\"range\"\n          min={minHardness}\n          max={maxHardness}\n          value={state.hardness}\n          onChange={handleHardnessChange}\n        />\n      </label> */}\n    </div>\n  )\n}\n\nexport default Options;\n","import { faArrowsAlt, faBrush, faMinus, faPalette, faSave, faSprayCan, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport Options from './Options';\n\nconst Sidebar = ({\n  dispatch,\n  state,\n  SET_COLOR,\n  SET_TOOL,\n  SET_THICKNESS,\n  SET_HARDNESS,\n  SPRAY_PAINT\n}) => {\n  const [minimized, setMinimized] = useState(false);\n  const [openColorPicker, setOpenColorPicker] = useState(false);\n  const [openOptions, setOpenOptions] = useState(false);\n  const [color, setColor] = useState('#000');\n\n  const [screenPosX, setScreenPosX] = useState();\n  const [screenPosY, setScreenPosY] = useState();\n\n  const sprayPaintRef = useRef();\n  const colorPaletteRef = useRef();\n  const moreOptionsRef = useRef();\n  const sidebarRef = useRef();\n\n  const componentRefs = [sprayPaintRef, colorPaletteRef, moreOptionsRef];\n\n  const canvas = document.getElementById(\"canvas\");\n\n  const handleClickSelection = ({ classList, dataset}) => {\n    dispatch({ type: SET_TOOL, payload: dataset.tool})\n\n    componentRefs.forEach(({ current }) => {\n      current.classList.remove('active');\n    });\n    classList.add('active');\n  }\n\n  const handleColorPickerClick = ({ currentTarget }) => {\n    // TODO: Make this more robust\n    setOpenOptions(false);\n    setOpenColorPicker(true);\n    handleClickSelection(currentTarget);\n  }\n\n  const handleOptionsClick = ({ currentTarget }) => {\n    // TODO: Make this more robust\n    setOpenColorPicker(false);\n    setOpenOptions(true);\n    handleClickSelection(currentTarget);\n  }\n\n  const handleNonColorPickerSelection = ({ currentTarget }) => {\n    setOpenColorPicker(false);\n    setOpenOptions(false);\n    handleClickSelection(currentTarget);\n  }\n\n  const handleColorChange = (color) => {\n    setColor(color);\n    dispatch({ type: SET_COLOR , payload: color.hex});\n  }\n\n  const handleSave = (e) => {\n    if (canvas) {\n      const href = canvas.toDataURL();\n      e.currentTarget.href = href;\n    };\n  }\n\n  const handleDelete = () => {\n    if (canvas) {\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n  }\n\n  const handleMouseMove = ({ screenX, screenY, buttons }) => {\n    if (buttons === 1) {\n      sidebarRef.current.style.transform =\n        `translate(${screenX - screenPosX}px, ${screenY - screenPosY}px`;\n      console.log(sidebarRef.current.getBoundingClientRect());\n    }\n  }\n\n  const handleMouseDown = (e) => {\n    handleNonColorPickerSelection(e);\n    setScreenPosX(e.screenX);\n    setScreenPosY(e.screenY);\n    const { top, left } = sidebarRef.current.getBoundingClientRect();\n    sidebarRef.current.style.top = `${top}px`;\n    sidebarRef.current.style.left = `${left}px`;\n    sidebarRef.current.style.transform = '';\n  }\n\n  return (\n    <aside className=\"sidebar-container\" ref={sidebarRef}>\n      <div className=\"sidebar-controls\">\n        <div\n          className=\"icon drag\"\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseDown}\n        >\n          <FontAwesomeIcon icon={faArrowsAlt} size=\"lg\"/>\n        </div>\n        <div className=\"icon close\" onClick={() => setMinimized(!minimized)}>\n          <FontAwesomeIcon icon={faMinus} size=\"lg\"/>\n        </div>\n      </div>\n      <div className={`sidebar-main ${minimized ? 'hide' : ''}`}>\n        <div\n          className=\"icon spraypaint\"\n          ref={sprayPaintRef}\n          onClick={handleNonColorPickerSelection}\n          data-tool={SPRAY_PAINT}\n        >\n          <FontAwesomeIcon icon={faSprayCan} size=\"lg\"/>\n        </div>\n        <div\n          className=\"icon more-options\"\n          ref={moreOptionsRef}\n          onClick={handleOptionsClick}\n        >\n          <FontAwesomeIcon icon={faBrush} size=\"lg\" />\n          <Options\n            open={openOptions}\n            dispatch={dispatch}\n            state={state}\n            SET_THICKNESS={SET_THICKNESS}\n            SET_HARDNESS={SET_HARDNESS}\n          />\n        </div>\n        <div\n          className=\"icon color-picker-icon\"\n          ref={colorPaletteRef}\n          onClick={handleColorPickerClick}\n        >\n          <FontAwesomeIcon icon={faPalette} size=\"lg\" />\n          {/* TODO: A little buggy */}\n          <ChromePicker\n            className={`color-picker ${openColorPicker ? 'active' : ''}`}\n            color={color}\n            onChange={handleColorChange}\n          />\n        </div>\n        <a\n          className=\"icon save\"\n          download=\"grafeetee.png\"\n          onClick={handleSave}\n          href=\"/\"\n        >\n          <FontAwesomeIcon icon={faSave} size=\"lg\"/>\n        </a>\n        <div\n          className=\"icon delete\"\n          onClick={handleDelete}\n        >\n          <FontAwesomeIcon icon={faTrash} size=\"lg\" />\n        </div>\n      </div>\n    </aside>\n  )\n}\n\nexport default Sidebar;","import React, { useReducer } from 'react';\nimport Canvas from './Canvas';\nimport Sidebar from './Sidebar';\n\nconst App = () => {\n  // TODO: Refactor this into their own files\n  // Action types\n  const SET_COLOR = 'SETCOLOR';\n  const SET_TOOL = 'SETTOOL';\n  const SET_THICKNESS = 'SETTHICKNESS';\n  const SET_HARDNESS = 'SETHARDNESS';\n\n  // Consts\n  const SPRAY_PAINT = 'SPRAYPAINT';\n\n  const reducer = (state, action) => {\n    Object.freeze(state);\n\n    let nextState = Object.assign({}, state);\n\n    switch(action.type) {\n      case SET_COLOR:\n        nextState.color = action.payload;\n        return nextState;\n      case SET_TOOL:\n        nextState.activeTool = action.payload;\n        return nextState;\n      case SET_THICKNESS:\n        nextState.thickness = action.payload;\n        return nextState;\n      case SET_HARDNESS:\n          nextState.hardness = action.payload;\n        return nextState;\n      default:\n        return state;\n    }\n  }\n\n  const initialState = {\n    color: \"#000\",\n    activeTool: SPRAY_PAINT,\n    thickness: 50,\n    hardness: 50,\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <section className=\"app-container\">\n      <Sidebar\n        dispatch={dispatch}\n        state={state}\n        SET_COLOR={SET_COLOR}\n        SET_TOOL={SET_TOOL}\n        SET_THICKNESS={SET_THICKNESS}\n        SET_HARDNESS={SET_HARDNESS}\n        SPRAY_PAINT={SPRAY_PAINT}\n      />\n      <Canvas\n        state={state}\n        SPRAY_PAINT={SPRAY_PAINT}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}